{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Expense","Income","calculateTotal","data","DOMstrings","budgetCtrl","UICtrl","updateBudget","ctrlAddItem","ctrlDeleteItem","budgetController","id","description","this","type","sum","allItems","forEach","el","totals","exp","inc","budget","percentage","addItem","des","val","newItem","ID","length","push","deleteItem","index","map","current","indexOf","splice","calculateBudget","Math","round","getBudget","totalInc","totalExp","testing","console","log","UIController","inputType","inputDescription","inputValue","inputBtn","incomeContainer","expensesContainer","budgetLabel","incomeLabel","expensesLabel","percentageLabel","container","getInput","document","querySelector","parseFloat","addListItem","obj","html","element","insertAdjacentHTML","deleteListItem","selectorID","getElementById","parentNode","removeChild","clearFields","fields","fieldsArr","querySelectorAll","Array","slice","focus","displayBudget","textContent","getDOMstrings","input","isNaN","event","itemID","splitID","target","split","parseInt","init","DOM","addEventListener","keyCode","which"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,MAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBC/ErD,IAGUC,EAOAC,EAOAC,EAUFC,EAyFEC,EAiGWC,EAAYC,EAoBvBC,EAgBAC,EAyBAC,EAlRNC,GAGMV,EAAU,SAASW,EAAIC,EAAa3B,GACtC4B,KAAKF,GAAKA,EACVE,KAAKD,YAAcA,EACnBC,KAAK5B,MAAQA,GAIXgB,EAAS,SAASU,EAAIC,EAAa3B,GACrC4B,KAAKF,GAAKA,EACVE,KAAKD,YAAcA,EACnBC,KAAK5B,MAAQA,GAIXiB,EAAiB,SAACY,GACpB,IAAIC,EAAM,EACVZ,EAAKa,SAASF,GAAMG,SAAQ,SAACC,GACzBH,GAAOG,EAAGjC,SAEdkB,EAAKgB,OAAOL,GAAQC,GAKpBZ,EAAO,CACPa,SAAU,CACNI,IAAK,GACLC,IAAK,IAETF,OAAQ,CACJC,IAAK,EACLC,IAAK,GAETC,OAAQ,EACRC,YAAa,GAGV,CACHC,QAAS,SAAUV,EAAMW,EAAKC,GAC1B,IAAIC,EAASC,EAkBb,OAdIA,EAFAzB,EAAKa,SAASF,GAAMe,OAAS,EAExB1B,EAAKa,SAASF,GAAMX,EAAKa,SAASF,GAAMe,OAAS,GAAGlB,GAAK,EAEzD,EAII,QAATG,EACAa,EAAU,IAAI3B,EAAQ4B,EAAIH,EAAKC,GACf,QAATZ,IACPa,EAAU,IAAI1B,EAAO2B,EAAIH,EAAKC,IAIlCvB,EAAKa,SAASF,GAAMgB,KAAKH,GAClBA,GAGXI,WAAY,SAACjB,EAAMH,GACf,IAASqB,GAOM,KAFfA,EAHM7B,EAAKa,SAASF,GAAMmB,KAAI,SAAAC,GAC1B,OAAOA,EAAQvB,MAEPwB,QAAQxB,KAGhBR,EAAKa,SAASF,GAAMsB,OAAOJ,EAAO,IAI1CK,gBAAiB,WAGbnC,EAAe,OACfA,EAAe,OAGfC,EAAKmB,OAASnB,EAAKgB,OAAOE,IAAMlB,EAAKgB,OAAOC,IAGxCjB,EAAKgB,OAAOE,IAAM,EAClBlB,EAAKoB,WAAae,KAAKC,MAAQpC,EAAKgB,OAAOC,IAAMjB,EAAKgB,OAAOE,IAAO,KAEpElB,EAAKoB,YAAc,GAK3BiB,UAAW,WACT,MAAO,CACHlB,OAAQnB,EAAKmB,OACbmB,SAAUtC,EAAKgB,OAAOE,IACtBqB,SAAUvC,EAAKgB,OAAOC,IACtBG,WAAYpB,EAAKoB,aAIvBoB,QAAS,WACLC,QAAQC,IAAI1C,MAUlB2C,GAEI1C,EAAa,CACf2C,UAAW,aACXC,iBAAkB,oBAClBC,WAAY,cACZC,SAAU,YACVC,gBAAiB,gBACjBC,kBAAmB,kBACnBC,YAAa,iBACbC,YAAa,yBACbC,cAAe,2BACfC,gBAAiB,gCACjBC,UAAW,cAGR,CACHC,SAAU,WACN,MAAO,CACH5C,KAAM6C,SAASC,cAAcxD,EAAW2C,WAAW9D,MACnD2B,YAAa+C,SAASC,cAAcxD,EAAW4C,kBAAkB/D,MACjEA,MAAO4E,WAAWF,SAASC,cAAcxD,EAAW6C,YAAYhE,SAIxE6E,YAAa,SAASC,EAAKjD,GACvB,IAAIkD,EAAeC,EAGN,QAATnD,GACAmD,EAAU7D,EAAW+C,gBACrBa,EAAO,sCAAH,OAAyCD,EAAIpD,GAA7C,0EACyCoD,EAAInD,YAD7C,sIAGuCmD,EAAI9E,MAH3C,ySASY,QAAT6B,IACPmD,EAAU7D,EAAWgD,kBACrBY,EAAO,sCAAH,OAAyCD,EAAIpD,GAA7C,0EACyCoD,EAAInD,YAD7C,sIAGuCmD,EAAI9E,MAH3C,ySAWR0E,SAASC,cAAcK,GAASC,mBAAmB,YAAaF,IAGpEG,eAAgB,SAAAC,GACZ,IAAMlD,EAAKyC,SAASU,eAAeD,GACnClD,EAAGoD,WAAWC,YAAYrD,IAI9BsD,YAAa,WACT,IAAIC,EAAQC,EAEZD,EAASd,SAASgB,iBAAT,UAA6BvE,EAAW4C,iBAAxC,aAA6D5C,EAAW6C,cAEjFyB,EAAYE,MAAMhF,UAAUiF,MAAM1G,KAAKsG,IAC7BxD,SAAQ,SAACC,GACfA,EAAGjC,MAAQ,MAEfyF,EAAU,GAAGI,SAGjBC,cAAe,SAAChB,GACZJ,SAASC,cAAcxD,EAAWiD,aAAa2B,YAAcjB,EAAIzC,OACjEqC,SAASC,cAAcxD,EAAWkD,aAAa0B,YAAcjB,EAAItB,SACjEkB,SAASC,cAAcxD,EAAWmD,eAAeyB,YAAcjB,EAAIrB,SAE/DqB,EAAIxC,WAAa,EACjBoC,SAASC,cAAcxD,EAAWoD,iBAAiBwB,YAAcjB,EAAIxC,WAAa,IAElFoC,SAASC,cAAcxD,EAAWoD,iBAAiBwB,YAAc,MAMzEC,cAAe,WACX,OAAO7E,MAUEC,EA0FlBK,EA1F8BJ,EA0FZwC,EAtEXvC,EAAe,WAEjBF,EAAWgC,kBAGX,IAAMf,EAASjB,EAAWmC,YAG1BlC,EAAOyE,cAAczD,IAQnBd,EAAc,WAChB,IAAI0E,EAAOvD,EAKe,MAH1BuD,EAAQ5E,EAAOoD,YAGL9C,cAAuBuE,MAAMD,EAAMjG,QAAUiG,EAAMjG,MAAQ,IAEjE0C,EAAUtB,EAAWmB,QAAQ0D,EAAMpE,KAAMoE,EAAMtE,YAAasE,EAAMjG,OAGlEqB,EAAOwD,YAAYnC,EAASuD,EAAMpE,MAGlCR,EAAOkE,cAGPjE,MAQFE,EAAiB,SAAA2E,GACrB,IAAIC,EAAQC,EAASxE,EAAMc,GACzByD,EAASD,EAAMG,OAAOjB,WAAWA,WAAWA,WAAWA,WAAW3D,MAI9DG,GADAwE,EAAUD,EAAOG,MAAM,MACR,GACf5D,EAAK6D,SAASH,EAAQ,IACtBjF,EAAW0B,WAAWjB,EAAMc,GAC5BtB,EAAO6D,eAAekB,GACtB9E,MAMG,CACHmF,KAAM,WA5EY,IAChBC,EA6EErF,EAAOyE,cAAc,CACjBzD,OAAQ,EACRmB,SAAU,EACVC,SAAU,EACVnB,YAAa,IAjFnBoE,EAAMrF,EAAO2E,gBAEnBtB,SAASC,cAAc+B,EAAIzC,UAAU0C,iBAAiB,QAASpF,GAE/DmD,SAASiC,iBAAiB,YAAY,SAACR,GAEnC,IAAI7F,EAAM6F,EAAM7F,KAAO6F,EAAMS,SAAWT,EAAMU,MAClC,UAARvG,GAA2B,KAARA,GACnBiB,OAKRmD,SAASC,cAAc+B,EAAIlC,WAAWmC,iBAAiB,QAASnF,MA4E7DiF","file":"script.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","////////////////////////////\r\n//        BUDGET CONTROLLER\r\n////////////////////////////\r\nlet budgetController = ( function() {\r\n\r\n    // Start the ES5 function constructor\r\n    const Expense = function(id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n    };\r\n\r\n    // Start the ES5 function constructor\r\n    const Income = function(id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n    };\r\n\r\n    //  Sum all the values contained in the allItems exp/inc arrays\r\n    const calculateTotal = (type) => {\r\n        let sum = 0;\r\n        data.allItems[type].forEach((el) => {\r\n            sum += el.value;\r\n        });\r\n        data.totals[type] = sum;\r\n\r\n    };\r\n\r\n\r\n    let data = {\r\n        allItems: {\r\n            exp: [],\r\n            inc: []\r\n        },\r\n        totals: {\r\n            exp: 0,\r\n            inc: 0\r\n        },\r\n        budget: 0,\r\n        percentage: -1 // it doesn't exist. Zero would be a wrong value\r\n    };\r\n\r\n    return {\r\n        addItem: function (type, des, val) {\r\n            let newItem, ID;\r\n\r\n            if (data.allItems[type].length > 0) {\r\n                // The id of the new item is the last id + 1.\r\n                ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\r\n            } else {\r\n                ID = 0;\r\n            }\r\n\r\n            // Create a new item according to the type\r\n            if (type === \"exp\") {\r\n                newItem = new Expense(ID, des, val)\r\n            } else if (type === \"inc\") {\r\n                newItem = new Income(ID, des, val)\r\n            }\r\n\r\n            // Add to the allItems object, to the specific exp or inc array\r\n            data.allItems[type].push(newItem);\r\n            return newItem // Give access to the newly created item to the other modules\r\n        },\r\n\r\n        deleteItem: (type, id) => {\r\n            let ids, index;\r\n\r\n            ids = data.allItems[type].map(current => {\r\n                return current.id;\r\n            });\r\n            index = ids.indexOf(id);\r\n\r\n            if (index !== -1){\r\n                data.allItems[type].splice(index, 1);\r\n            }\r\n        },\r\n\r\n        calculateBudget: () => {\r\n\r\n            // And now calculate the total expenses and incomes\r\n            calculateTotal(\"exp\");\r\n            calculateTotal(\"inc\");\r\n\r\n            // Calculate the budget, which is  income - expenses\r\n            data.budget = data.totals.inc - data.totals.exp;\r\n\r\n            // Calculation of the percentage of the income spent\r\n            if (data.totals.inc > 0) {\r\n                data.percentage = Math.round ((data.totals.exp / data.totals.inc) * 100);\r\n            } else {\r\n                data.percentage = -1;\r\n            }\r\n\r\n        },\r\n\r\n        getBudget: () => {\r\n          return {\r\n              budget: data.budget,\r\n              totalInc: data.totals.inc,\r\n              totalExp: data.totals.exp,\r\n              percentage: data.percentage\r\n          }\r\n        },\r\n\r\n        testing: function() {\r\n            console.log(data);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n////////////////////////////\r\n//      UI CONTROLLER\r\n////////////////////////////\r\nconst UIController = (() => {\r\n\r\n    const DOMstrings = {\r\n        inputType: \".add__type\",\r\n        inputDescription: \".add__description\",\r\n        inputValue: \".add__value\",\r\n        inputBtn: \".add__btn\",\r\n        incomeContainer: \".income__list\",\r\n        expensesContainer: \".expenses__list\",\r\n        budgetLabel: \".budget__value\",\r\n        incomeLabel: \".budget__income--value\",\r\n        expensesLabel: \".budget__expenses--value\",\r\n        percentageLabel: \".budget__expenses--percentage\",\r\n        container: \".container\"\r\n    };\r\n\r\n    return {\r\n        getInput: () => {\r\n            return { //return a variable with an object that contains the input properties\r\n                type: document.querySelector(DOMstrings.inputType).value, // inc or exp\r\n                description: document.querySelector(DOMstrings.inputDescription).value,\r\n                value: parseFloat(document.querySelector(DOMstrings.inputValue).value),\r\n            };\r\n        },\r\n\r\n        addListItem: function(obj, type) {\r\n            let html, newHtml, element;\r\n\r\n            // Create the HTML string with the placeholder text\r\n            if (type === \"inc\") {\r\n                element = DOMstrings.incomeContainer;\r\n                html = `<div class=\"item clearfix\" id=\"inc-${obj.id}\">\r\n                            <div class=\"item__description\">${obj.description}</div>\r\n                            <div class=\"right clearfix\">\r\n                                <div class=\"item__value\">${obj.value}</div>\r\n                                <div class=\"item__delete\">\r\n                                    <button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>`;\r\n            } else if (type === \"exp\"){\r\n                element = DOMstrings.expensesContainer;\r\n                html = `<div class=\"item clearfix\" id=\"exp-${obj.id}\">\r\n                            <div class=\"item__description\">${obj.description}</div>\r\n                            <div class=\"right clearfix\">\r\n                                <div class=\"item__value\">${obj.value}</div>\r\n                                <div class=\"item__delete\">\r\n                                    <button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>`;\r\n            }\r\n\r\n            document.querySelector(element).insertAdjacentHTML(\"beforeend\", html);\r\n        },\r\n\r\n        deleteListItem: selectorID => {\r\n            const el = document.getElementById(selectorID);\r\n            el.parentNode.removeChild(el);\r\n        },\r\n\r\n        // Clear all the input fields after adding an exp of inc\r\n        clearFields: () => {\r\n            let fields, fieldsArr;\r\n\r\n            fields = document.querySelectorAll(`${DOMstrings.inputDescription}, ${DOMstrings.inputValue}`)\r\n            // Convert the node list to an array to later run a forEach. Slice is stored in the prototype\r\n            fieldsArr = Array.prototype.slice.call(fields);\r\n            fieldsArr.forEach((el) => {\r\n                el.value = \"\";\r\n            });\r\n            fieldsArr[0].focus(); // Afer adding, make focus to the description\r\n        },\r\n\r\n        displayBudget: (obj) => {\r\n            document.querySelector(DOMstrings.budgetLabel).textContent = obj.budget;\r\n            document.querySelector(DOMstrings.incomeLabel).textContent = obj.totalInc;\r\n            document.querySelector(DOMstrings.expensesLabel).textContent = obj.totalExp;\r\n\r\n            if (obj.percentage > 0) {\r\n                document.querySelector(DOMstrings.percentageLabel).textContent = obj.percentage + \"%\";\r\n            } else {\r\n                document.querySelector(DOMstrings.percentageLabel).textContent = \"--\";\r\n            }\r\n        },\r\n\r\n\r\n        // Send the strings to the other controllers\r\n        getDOMstrings: () => {\r\n            return DOMstrings;\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\n////////////////////////////\r\n//   GLOBAL APP CONTROLLER\r\n////////////////////////////\r\nconst controller = ((budgetCtrl, UICtrl) => {\r\n\r\n    var setupEventListeners = () => {\r\n        const DOM = UICtrl.getDOMstrings();\r\n\r\n        document.querySelector(DOM.inputBtn).addEventListener(\"click\", ctrlAddItem);\r\n\r\n        document.addEventListener(\"keypress\", (event) => {\r\n            // With graceful degradation to meet the ECMA specification and to have good browser support\r\n            let key = event.key || event.keyCode || event.which;\r\n            if (key === \"Enter\" || key === 13) {\r\n                ctrlAddItem();\r\n            }\r\n        });\r\n\r\n        // Event delegation to delete each item. Given to the parent instead than to each element\r\n        document.querySelector(DOM.container).addEventListener(\"click\", ctrlDeleteItem);\r\n    };\r\n\r\n\r\n    const updateBudget = () => {\r\n        // Calculate the budget\r\n        budgetCtrl.calculateBudget();\r\n\r\n        // Return the budget\r\n        const budget = budgetCtrl.getBudget();\r\n\r\n        // Show the budget in the top part of the page\r\n        UICtrl.displayBudget(budget);\r\n    };\r\n\r\n    const updatePercentages = () => {\r\n\r\n    };\r\n\r\n\r\n    const ctrlAddItem = () => {\r\n        let input, newItem;\r\n        // Get the input data\r\n        input = UICtrl.getInput();\r\n\r\n        // The button should work only if the fields are filled and the value is a num > 0\r\n        if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\r\n            // Add the item to the budget controller\r\n            newItem = budgetCtrl.addItem(input.type, input.description, input.value);\r\n\r\n            // Add the item to the UI\r\n            UICtrl.addListItem(newItem, input.type);\r\n\r\n            // Clear all the fields\r\n            UICtrl.clearFields();\r\n\r\n            // Calculate and update the budget\r\n            updateBudget();\r\n\r\n            // Calculate and update the percentages on each item\r\n            updatePercentages();\r\n        }\r\n    };\r\n\r\n    // Event delegation to delete each item\r\n    const ctrlDeleteItem = event => {\r\n      let itemID, splitID, type, ID;\r\n        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\r\n\r\n        if (itemID) {\r\n            splitID = itemID.split(\"-\");\r\n            type = splitID[0];\r\n            ID = parseInt(splitID[1]);\r\n            budgetCtrl.deleteItem(type, ID);\r\n            UICtrl.deleteListItem(itemID);\r\n            updateBudget();\r\n            // Calculate and update the percentages on each item\r\n            updatePercentages();\r\n        }\r\n    };\r\n\r\n        return {\r\n            init: function () {\r\n                // Start with zero values in the UI\r\n                UICtrl.displayBudget({\r\n                    budget: 0,\r\n                    totalInc: 0,\r\n                    totalExp: 0,\r\n                    percentage: -1\r\n            });\r\n                setupEventListeners();\r\n            }\r\n        }\r\n\r\n})(budgetController, UIController);\r\n\r\ncontroller.init();"],"sourceRoot":""}